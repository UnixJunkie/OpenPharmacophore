{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "e9b0b79a-efa7-4a7a-9ef9-e54156ee05b8",
   "metadata": {},
   "source": [
    "# Elements"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "07de298c-19b9-46ba-8ab7-33b31ec36534",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "77f4eb9e165c4878994a34c6551744ab",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": []
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from openpharmacophore import pharmacophoric_elements as elements\n",
    "import pyunitwizard as puw\n",
    "import nglview as nv"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "40e8ae97-3de9-43df-88ec-bd67bef79c2d",
   "metadata": {},
   "source": [
    "| Class | Feature | Shape | Explanation |\n",
    "| ----- | ------- | ----- | ----------- |\n",
    "| [PositiveChargePoint]() | [positive charge][positive_charge] | [point][point] | ... |\n",
    "| [PositiveChargeSphere]() | [positive charge]() | [sphere]() | ... |\n",
    "| [PositiveChargeGaussianKernel]() | [positive charge]() | [gaussian kernel]() | ... |\n",
    "| [NegativeChargePoint]() | [negative charge]() | [point]() | ... |\n",
    "| [NegativeChargeSphere]() | [negative charge]() | [sphere]() | ... |\n",
    "| [NegativeChargeGaussianKernel]() | [negative charge]() | [gaussian kernel]() | ... |\n",
    "| [HBDonorPoint]() | [hb donor]() | [point]() | ... |\n",
    "| [HBDonorSphere]() | [hb donor]() | [sphere]() | ... |\n",
    "| [HBDonorSphereAndVector]() | [hb donor]() | [sphere and vector]() | ... |\n",
    "| [HBDonorGaussianKernel]() | [hb donor]() | [gaussian kernel]() | ... |\n",
    "| [HBAcceptorPoint]() | [hb acceptor]() | [point]() | ... |\n",
    "| [HBAcceptorSphere]() | [hb acceptor]() | [sphere]() | ... |\n",
    "| [HBAcceptorSphereAndVector]() | [hb acceptor]() | [sphere and vector]() | ... |\n",
    "| [HBAcceptorGaussianKernel]() | [hb acceptor]() | [gaussian kernel]() | ... |\n",
    "| [AromaticRingPoint]() | [aromatic ring]() | [point]() | ... |\n",
    "| [AromaticRingSphere]() | [aromatic ring]() | [sphere]() | ... |\n",
    "| [AromaticRingSphereAndVector]() | [aromatic ring]() | [sphere and vector]() | ... |\n",
    "| [AromaticRingShapelet]() | [aromatic ring]() | [shapelet]() | ... |\n",
    "| [HydrophobicPoint]() | [hydrophobicity]() | [point]() | ... |\n",
    "| [HydrophobicSphere]() | [hydrophobicity]() | [sphere]() | ... |\n",
    "| [HydrophobicGaussianKernel]() | [hydrophobicity]() | [gaussian kernel]() | ... |\n",
    "| [HydrophobicShapelet]() | [hydrophobicity]() | [shapelet]() | ... |\n",
    "| [IncludedVolumePoint]() | [included volume]() | [point]() | ... |\n",
    "| [IncludedVolumeSphere]() | [included volume]() | [sphere]() | ... |\n",
    "| [IncludedVolumeGaussianKernel]() | [included volume]() | [gaussian kernel]() | ... |\n",
    "| [IncludedVolumeShapelet]() | [included volume]() | [shapelet]() | ... |\n",
    "| [ExcludedVolumePoint]() | [excluded volume]() | [point]() | ... |\n",
    "| [ExcludedVolumeSphere]() | [excluded volume]() | [sphere]() | ... |\n",
    "| [ExcludedVolumeGaussianKernel]() | [excluded volume]() | [gaussian kernel]() | ... |\n",
    "| [ExcludedVolumeShapelet]() | [excluded volume]() | [shapelet]() | ... |\n",
    "\n",
    "[positive_charge]: Pharmacophoric_features#Positive-charge\n",
    "\n",
    "[point]: Pharmacophoric_shapes#Point"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "8d1a6f19-6667-4035-9c7e-dbfbe42d7cb3",
   "metadata": {},
   "outputs": [],
   "source": [
    "center = puw.quantity([0,0,0], 'nm')\n",
    "radius = puw.quantity(2.0, 'nm')\n",
    "direction = [1,1,1]\n",
    "element = elements.HBDonorSphereAndVector(center, radius, direction)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "df0c78d3-ce53-4061-8b99-3a1a7b8263af",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "1336435137d1497cb905d88c0a3ce9c1",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "NGLWidget()"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "view = nv.NGLWidget()\n",
    "element.add_to_NGLView(view, color='#004777', opacity=0.5)\n",
    "view.control.zoom(0.8)\n",
    "view"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
